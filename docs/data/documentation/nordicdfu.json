{"abstract":[{"type":"text","text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nordicdfu"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"externalID":"NordicDFU","role":"collection","symbolKind":"module","title":"NordicDFU","roleHeading":"Framework","modules":[{"name":"NordicDFU"}]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The DFU Library allows to update nRF51 and nRF52 devices running firmware based on"},{"text":" ","type":"text"},{"identifier":"https:\/\/infocenter.nordicsemi.com\/topic\/struct_sdk\/struct\/sdk_nrf5_latest.html?cp=9_1","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"starting from version 4.3 until the latest one."}]},{"inlineContent":[{"text":"The nRF5x Series chips are flash-based SoCs, and as such they represent the most flexible solution available.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"A key feature of the nRF5x Series and their associated software architecture and S-Series SoftDevices is the"},{"text":" ","type":"text"},{"type":"text","text":"possibility for Over-The-Air Device Firmware Upgrade (OTA-DFU). OTA-DFU allows firmware upgrades to be issued"},{"type":"text","text":" "},{"text":"and downloaded to products in the field via the cloud and so enables OEMs to fix bugs and introduce new features","type":"text"},{"type":"text","text":" "},{"text":"to products that are already out on the market. This brings added security and flexibility to product development","type":"text"},{"type":"text","text":" "},{"text":"when using the nRF5x Series SoCs.","type":"text"}],"type":"paragraph"},{"style":"important","type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This library is not compatible with MCU Manager subsystem from"},{"type":"text","text":" "},{"identifier":"https:\/\/docs.nordicsemi.com\/bundle\/ncs-latest\/page\/nrf\/index.html","isActive":true,"type":"reference"},{"type":"text","text":" "},{"text":"or ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/docs.zephyrproject.org\/latest\/index.html"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"To update devices built on those SDKs use","type":"text"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/NordicSemiconductor\/IOS-nRF-Connect-Device-Manager\/","type":"reference","isActive":true},{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"library instead.","type":"text"}]}]},{"level":2,"type":"heading","anchor":"Supported-Features","text":"Supported Features"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows to update the Application, SoftDevice and\/or the Bootloader Over-the-Air on the","type":"text"},{"type":"text","text":" "},{"text":"nRF51 and nRF52 Series SoC over Bluetooth LE.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Supports ZIP, HEX or BIN files."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"ZIP files may contain a SoftDevice, Bootloader and Application in a single file."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Supports the Init packet (which has been required since Bootloader\/DFU from SDK 7.0+).","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides delegates with state, progress, errors or log events to the application."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Handles bonded devices and buttonless update.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Recovering after upload error.","type":"text"}]}]}]},{"style":"note","name":"Note","content":[{"inlineContent":[{"text":"The protocol has build in recovery mechanism in case of a communication error.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"When an application or a bootloader is updated, the previous version is restored."},{"type":"text","text":" "},{"text":"As the SoftDevice requires more space for double-bank update and in most cases the Application","type":"text"},{"type":"text","text":" "},{"text":"has to be erased, but the device can be recovered using the DFU bootloader.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"type":"heading","text":"Usage","anchor":"Usage","level":2},{"inlineContent":[{"type":"text","text":"To start the DFU process you have to do 2 things:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Create a ","type":"text"},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmware","type":"reference","isActive":true},{"type":"text","text":" object using a URL to a Distribution Packet (ZIP), or using a URLs to"},{"type":"text","text":" "},{"text":"a BIN\/HEX file, DAT file (optionally) and by specifying a file type (Softdevice, Bootloader or","type":"text"},{"text":" ","type":"text"},{"text":"Application).","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let selectedFirmware = try DFUFirmware(urlToZipFile: url)","\/\/ or","let selectedFirmware = try DFUFirmware(urlToBinOrHexFile: url, urlToDatFile: datUrl, type: .application)"]},{"inlineContent":[{"text":"The ","type":"text"},{"code":"DFUFirmware","type":"codeVoice"},{"text":" object allows you to get basic information about the firmware, like sizes","type":"text"},{"type":"text","text":" "},{"text":"of each component or number of parts. Number of parts is the number of connections required","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to send all content of the Distribution Packet. It is equal to 1 unless a ZIP file contain"},{"type":"text","text":" "},{"type":"text","text":"a Softdevice and\/or Bootloader and an Application, in which case itâ€™s equal to 2."},{"type":"text","text":" "},{"type":"text","text":"The Softdevice and\/or Bootloader will be sent as part one, then the DFU target device will"},{"type":"text","text":" "},{"text":"disconnect, reset and DFU Service will connect again and send the Application as part 2.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use the ","type":"text"},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","isActive":true,"type":"reference"},{"type":"text","text":" to initialize the DFU process."}]},{"syntax":"swift","code":["let initiator = DFUServiceInitiator()","\/\/ Optional:","\/\/ initiator.forceDfu = true\/false \/\/ default false","\/\/ initiator.packetReceiptNotificationParameter = N \/\/ default is 12","initiator.logger = self \/\/ - to get log info","initiator.delegate = self \/\/ - to be informed about current state and errors ","initiator.progressDelegate = self \/\/ - to get progress updates","\/\/ initiator.peripheralSelector = ... \/\/ the default selector is used","","let controller = initiator.with(firmware: selectedFirmware).start(target: peripheral)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","isActive":true,"type":"reference"},{"type":"text","text":" you may pause, resume or abort the DFU operation."}]}]}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/NordicDFU\/documentation\/NordicDFU"},"topicSections":[{"identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceDelegate","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUError","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelectorDelegate","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelector"],"title":"Initialization"},{"title":"Firmware","identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmware","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareSize","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareType","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareError","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUStreamZipError","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUStreamHexError"]},{"identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUProgressDelegate"],"title":"Reporting progress"},{"identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/LoggerDelegate","doc:\/\/NordicDFU\/documentation\/NordicDFU\/LogLevel"],"title":"Logging"},{"title":"Advanced","identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/LegacyDFUServiceInitiator","doc:\/\/NordicDFU\/documentation\/NordicDFU\/SecureDFUServiceInitiator","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuidHelper","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuid","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuidType","doc:\/\/NordicDFU\/documentation\/NordicDFU\/IntelHex2BinConverter"]},{"title":"Protocols","identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/DataConvertible"]},{"title":"Extended Modules","identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/Foundation","doc:\/\/NordicDFU\/documentation\/NordicDFU\/Swift"]}],"hierarchy":{"paths":[[]]},"references":{"doc://NordicDFU/documentation/NordicDFU/SecureDFUServiceInitiator":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/SecureDFUServiceInitiator","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SecureDFUServiceInitiator"}],"navigatorTitle":[{"kind":"identifier","text":"SecureDFUServiceInitiator"}],"url":"\/documentation\/nordicdfu\/securedfuserviceinitiator","abstract":[{"text":"This initiator can be used to start a DFU process using Secure DFU service.","type":"text"}],"title":"SecureDFUServiceInitiator"},"doc://NordicDFU/documentation/NordicDFU/DFUStreamZipError":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DFUStreamZipError"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUStreamZipError"}],"role":"symbol","title":"DFUStreamZipError","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUStreamZipError","url":"\/documentation\/nordicdfu\/dfustreamziperror","type":"topic","abstract":[{"type":"text","text":"A DFU Firmware error for ZIP files."}]},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DFUServiceInitiator","kind":"identifier"}],"title":"DFUServiceInitiator","navigatorTitle":[{"kind":"identifier","text":"DFUServiceInitiator"}],"role":"symbol","abstract":[{"type":"text","text":"The initiator object should be used to initiate updating firmware"},{"type":"text","text":" "},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK."}],"kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUFirmware":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUFirmware","kind":"identifier"}],"url":"\/documentation\/nordicdfu\/dfufirmware","kind":"symbol","navigatorTitle":[{"text":"DFUFirmware","kind":"identifier"}],"title":"DFUFirmware","abstract":[{"text":"The DFU Firmware object wraps the firmware file and provides access to its content.","type":"text"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmware","role":"symbol","type":"topic"},"doc://NordicDFU/documentation/NordicDFU/LogLevel":{"type":"topic","title":"LogLevel","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogLevel","kind":"identifier"}],"url":"\/documentation\/nordicdfu\/loglevel","abstract":[{"text":"Log levels used by the ","type":"text"},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/LoggerDelegate","type":"reference","isActive":true},{"type":"text","text":"."}],"kind":"symbol","navigatorTitle":[{"text":"LogLevel","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/LogLevel"},"doc://NordicDFU/documentation/NordicDFU/DFUUuidType":{"navigatorTitle":[{"kind":"identifier","text":"DFUUuidType"}],"kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuidType","abstract":[{"type":"text","text":"UUID Types for DFU."}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUUuidType"}],"url":"\/documentation\/nordicdfu\/dfuuuidtype","role":"symbol","type":"topic","title":"DFUUuidType"},"https://docs.nordicsemi.com/bundle/ncs-latest/page/nrf/index.html":{"title":"nRFÂ ConnectÂ SDKÂ (NCS)","type":"link","identifier":"https:\/\/docs.nordicsemi.com\/bundle\/ncs-latest\/page\/nrf\/index.html","url":"https:\/\/docs.nordicsemi.com\/bundle\/ncs-latest\/page\/nrf\/index.html","titleInlineContent":[{"type":"text","text":"nRFÂ ConnectÂ SDKÂ (NCS)"}]},"doc://NordicDFU/documentation/NordicDFU/LoggerDelegate":{"type":"topic","title":"LoggerDelegate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LoggerDelegate"}],"url":"\/documentation\/nordicdfu\/loggerdelegate","kind":"symbol","abstract":[{"type":"text","text":"The Logger delegate."}],"navigatorTitle":[{"text":"LoggerDelegate","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/LoggerDelegate"},"doc://NordicDFU/documentation/NordicDFU/DFUProgressDelegate":{"url":"\/documentation\/nordicdfu\/dfuprogressdelegate","abstract":[{"type":"text","text":"The progress delegates may be used to notify user about progress updates."}],"navigatorTitle":[{"kind":"identifier","text":"DFUProgressDelegate"}],"kind":"symbol","role":"symbol","title":"DFUProgressDelegate","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DFUProgressDelegate"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUProgressDelegate"},"doc://NordicDFU/documentation/NordicDFU/Swift":{"url":"\/documentation\/nordicdfu\/swift","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/Swift","role":"collection","kind":"symbol","title":"Swift","abstract":[],"type":"topic"},"https://github.com/NordicSemiconductor/IOS-nRF-Connect-Device-Manager/":{"titleInlineContent":[{"type":"text","text":"nRF Connect Device Manager"}],"title":"nRF Connect Device Manager","type":"link","url":"https:\/\/github.com\/NordicSemiconductor\/IOS-nRF-Connect-Device-Manager\/","identifier":"https:\/\/github.com\/NordicSemiconductor\/IOS-nRF-Connect-Device-Manager\/"},"doc://NordicDFU/documentation/NordicDFU/DataConvertible":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DataConvertible","title":"DataConvertible","navigatorTitle":[{"text":"DataConvertible","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DataConvertible"}],"type":"topic","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/nordicdfu\/dataconvertible"},"https://infocenter.nordicsemi.com/topic/struct_sdk/struct/sdk_nrf5_latest.html?cp=9_1":{"title":"nRF5Â SDK","type":"link","identifier":"https:\/\/infocenter.nordicsemi.com\/topic\/struct_sdk\/struct\/sdk_nrf5_latest.html?cp=9_1","url":"https:\/\/infocenter.nordicsemi.com\/topic\/struct_sdk\/struct\/sdk_nrf5_latest.html?cp=9_1","titleInlineContent":[{"type":"text","text":"nRF5Â SDK"}]},"doc://NordicDFU/documentation/NordicDFU/DFUStreamHexError":{"role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUStreamHexError","title":"DFUStreamHexError","navigatorTitle":[{"kind":"identifier","text":"DFUStreamHexError"}],"kind":"symbol","url":"\/documentation\/nordicdfu\/dfustreamhexerror","abstract":[{"type":"text","text":"A DFU Firmware error for a HEX files."}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"DFUStreamHexError","kind":"identifier"}],"type":"topic"},"doc://NordicDFU/documentation/NordicDFU/DFUUuidHelper":{"role":"symbol","navigatorTitle":[{"text":"DFUUuidHelper","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"DFUUuidHelper","kind":"identifier"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuidHelper","title":"DFUUuidHelper","type":"topic","abstract":[{"type":"text","text":"UUID Helper for DFU Process."}],"url":"\/documentation\/nordicdfu\/dfuuuidhelper"},"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","title":"NordicDFU","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","role":"collection","type":"topic","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}]},"https://docs.zephyrproject.org/latest/index.html":{"type":"link","titleInlineContent":[{"type":"text","text":"Zephyr"}],"url":"https:\/\/docs.zephyrproject.org\/latest\/index.html","identifier":"https:\/\/docs.zephyrproject.org\/latest\/index.html","title":"Zephyr"},"doc://NordicDFU/documentation/NordicDFU/DFUPeripheralSelectorDelegate":{"url":"\/documentation\/nordicdfu\/dfuperipheralselectordelegate","abstract":[{"text":"The DFU peripheral selector delegate is used to select the device advertising in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"DFU bootloader mode after switching from application mode."}],"navigatorTitle":[{"kind":"identifier","text":"DFUPeripheralSelectorDelegate"}],"kind":"symbol","role":"symbol","title":"DFUPeripheralSelectorDelegate","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUPeripheralSelectorDelegate","kind":"identifier"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelectorDelegate"},"doc://NordicDFU/documentation/NordicDFU/LegacyDFUServiceInitiator":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/LegacyDFUServiceInitiator","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LegacyDFUServiceInitiator"}],"navigatorTitle":[{"kind":"identifier","text":"LegacyDFUServiceInitiator"}],"url":"\/documentation\/nordicdfu\/legacydfuserviceinitiator","abstract":[{"text":"This initiator can be used to start a DFU process using Legacy DFU service.","type":"text"}],"title":"LegacyDFUServiceInitiator"},"doc://NordicDFU/documentation/NordicDFU/DFUUuid":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuid","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DFUUuid"}],"navigatorTitle":[{"kind":"identifier","text":"DFUUuid"}],"url":"\/documentation\/nordicdfu\/dfuuuid","abstract":[{"text":"DFU UUID object.","type":"text"}],"title":"DFUUuid"},"doc://NordicDFU/documentation/NordicDFU/DFUFirmwareSize":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUFirmwareSize","kind":"identifier"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareSize","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"An object containing sizes of all parts of the new firmware."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DFUFirmwareSize"}],"title":"DFUFirmwareSize","url":"\/documentation\/nordicdfu\/dfufirmwaresize"},"doc://NordicDFU/documentation/NordicDFU/Foundation":{"title":"Foundation","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/Foundation","url":"\/documentation\/nordicdfu\/foundation","type":"topic","role":"collection","abstract":[],"kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUFirmwareType":{"title":"DFUFirmwareType","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DFUFirmwareType"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUFirmwareType","kind":"identifier"}],"abstract":[{"text":"The type of the BIN or HEX file, or selection of content from the Distribution","type":"text"},{"type":"text","text":" "},{"type":"text","text":"packet (ZIP) file."}],"kind":"symbol","type":"topic","url":"\/documentation\/nordicdfu\/dfufirmwaretype"},"doc://NordicDFU/documentation/NordicDFU/IntelHex2BinConverter":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/IntelHex2BinConverter","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntelHex2BinConverter"}],"navigatorTitle":[{"kind":"identifier","text":"IntelHex2BinConverter"}],"url":"\/documentation\/nordicdfu\/intelhex2binconverter","abstract":[{"text":"This converter converts Intel HEX file to BIN.","type":"text"}],"title":"IntelHex2BinConverter"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceDelegate":{"abstract":[{"type":"text","text":"The service delegate reports about state changes and errors."}],"type":"topic","navigatorTitle":[{"text":"DFUServiceDelegate","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceDelegate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUServiceDelegate","kind":"identifier"}],"title":"DFUServiceDelegate","kind":"symbol","url":"\/documentation\/nordicdfu\/dfuservicedelegate"},"doc://NordicDFU/documentation/NordicDFU/DFUFirmwareError":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareError","abstract":[{"type":"text","text":"An error thrown when instantiating a "},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmware","type":"reference","isActive":true},{"type":"text","text":" type from an invalid file."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUFirmwareError","kind":"identifier"}],"type":"topic","title":"DFUFirmwareError","url":"\/documentation\/nordicdfu\/dfufirmwareerror","navigatorTitle":[{"text":"DFUFirmwareError","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUError":{"abstract":[{"text":"A DFU error enumeration.","type":"text"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUError","kind":"identifier"}],"title":"DFUError","navigatorTitle":[{"kind":"identifier","text":"DFUError"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUError","url":"\/documentation\/nordicdfu\/dfuerror","kind":"symbol","type":"topic"},"doc://NordicDFU/documentation/NordicDFU/DFUPeripheralSelector":{"url":"\/documentation\/nordicdfu\/dfuperipheralselector","abstract":[{"type":"text","text":"The default implementation of "},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelectorDelegate","isActive":true,"type":"reference"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"DFUPeripheralSelector","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"DFUPeripheralSelector","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUPeripheralSelector"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelector"},"doc://NordicDFU/documentation/NordicDFU/DFUState":{"url":"\/documentation\/nordicdfu\/dfustate","type":"topic","navigatorTitle":[{"text":"DFUState","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUState","kind":"identifier"}],"role":"symbol","title":"DFUState","kind":"symbol","abstract":[{"text":"The state of the DFU Service.","type":"text"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceController":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceController"}],"title":"DFUServiceController","navigatorTitle":[{"text":"DFUServiceController","kind":"identifier"}],"type":"topic","abstract":[{"text":"The controller allows pausing, resuming or aborting the ongoing DFU operation.","type":"text"}],"url":"\/documentation\/nordicdfu\/dfuservicecontroller"}}}