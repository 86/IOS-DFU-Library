{"variants":[{"paths":["\/documentation\/nordicdfu"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"text":"The DFU Library allows to update nRF51 and nRF52 devices running firmware based on","type":"text"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/infocenter.nordicsemi.com\/topic\/struct_sdk\/struct\/sdk_nrf5_latest.html?cp=9_1"},{"type":"text","text":" "},{"text":"starting from version 4.3 until the latest one.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The nRF5x Series chips are flash-based SoCs, and as such they represent the most flexible solution available.","type":"text"},{"type":"text","text":" "},{"text":"A key feature of the nRF5x Series and their associated software architecture and S-Series SoftDevices is the","type":"text"},{"type":"text","text":" "},{"text":"possibility for Over-The-Air Device Firmware Upgrade (OTA-DFU). OTA-DFU allows firmware upgrades to be issued","type":"text"},{"type":"text","text":" "},{"text":"and downloaded to products in the field via the cloud and so enables OEMs to fix bugs and introduce new features","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to products that are already out on the market. This brings added security and flexibility to product development"},{"type":"text","text":" "},{"text":"when using the nRF5x Series SoCs.","type":"text"}]},{"style":"important","content":[{"inlineContent":[{"type":"text","text":"This library is not compatible with MCU Manager subsystem from"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/docs.nordicsemi.com\/bundle\/ncs-latest\/page\/nrf\/index.html","isActive":true},{"type":"text","text":" "},{"text":"or ","type":"text"},{"identifier":"https:\/\/docs.zephyrproject.org\/latest\/index.html","type":"reference","isActive":true},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"To update devices built on those SDKs use"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/github.com\/NordicSemiconductor\/IOS-nRF-Connect-Device-Manager\/","type":"reference"},{"text":"","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"library instead."}],"type":"paragraph"}],"name":"Important","type":"aside"},{"text":"Supported Features","anchor":"Supported-Features","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Allows to update the Application, SoftDevice and\/or the Bootloader Over-the-Air on the"},{"type":"text","text":" "},{"text":"nRF51 and nRF52 Series SoC over Bluetooth LE.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Supports ZIP, HEX or BIN files.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"ZIP files may contain a SoftDevice, Bootloader and Application in a single file.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Supports the Init packet (which has been required since Bootloader\/DFU from SDK 7.0+)."}]}]},{"content":[{"inlineContent":[{"text":"Provides delegates with state, progress, errors or log events to the application.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Handles bonded devices and buttonless update."}]}]},{"content":[{"inlineContent":[{"text":"Recovering after upload error.","type":"text"}],"type":"paragraph"}]}]},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The protocol has build in recovery mechanism in case of a communication error."},{"type":"text","text":" "},{"text":"When an application or a bootloader is updated, the previous version is restored.","type":"text"},{"type":"text","text":" "},{"text":"As the SoftDevice requires more space for double-bank update and in most cases the Application","type":"text"},{"type":"text","text":" "},{"text":"has to be erased, but the device can be recovered using the DFU bootloader.","type":"text"}]}],"style":"note"},{"anchor":"Usage","type":"heading","level":2,"text":"Usage"},{"type":"paragraph","inlineContent":[{"text":"To start the DFU process you have to do 2 things:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Create a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmware"},{"type":"text","text":" object using a URL to a Distribution Packet (ZIP), or using a URLs to"},{"type":"text","text":" "},{"type":"text","text":"a BIN\/HEX file, DAT file (optionally) and by specifying a file type (Softdevice, Bootloader or"},{"text":" ","type":"text"},{"text":"Application).","type":"text"}]},{"code":["let selectedFirmware = try DFUFirmware(urlToZipFile: url)","\/\/ or","let selectedFirmware = try DFUFirmware(urlToBinOrHexFile: url, urlToDatFile: datUrl, type: .application)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"DFUFirmware","type":"codeVoice"},{"text":" object allows you to get basic information about the firmware, like sizes","type":"text"},{"type":"text","text":" "},{"text":"of each component or number of parts. Number of parts is the number of connections required","type":"text"},{"text":" ","type":"text"},{"text":"to send all content of the Distribution Packet. It is equal to 1 unless a ZIP file contain","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a Softdevice and\/or Bootloader and an Application, in which case itâ€™s equal to 2."},{"type":"text","text":" "},{"text":"The Softdevice and\/or Bootloader will be sent as part one, then the DFU target device will","type":"text"},{"text":" ","type":"text"},{"text":"disconnect, reset and DFU Service will connect again and send the Application as part 2.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Use the "},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","isActive":true,"type":"reference"},{"type":"text","text":" to initialize the DFU process."}],"type":"paragraph"},{"code":["let initiator = DFUServiceInitiator()","\/\/ Optional:","\/\/ initiator.forceDfu = true\/false \/\/ default false","\/\/ initiator.packetReceiptNotificationParameter = N \/\/ default is 12","initiator.logger = self \/\/ - to get log info","initiator.delegate = self \/\/ - to be informed about current state and errors ","initiator.progressDelegate = self \/\/ - to get progress updates","\/\/ initiator.peripheralSelector = ... \/\/ the default selector is used","","let controller = initiator.with(firmware: selectedFirmware).start(target: peripheral)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController"},{"type":"text","text":" you may pause, resume or abort the DFU operation."}]}]}],"type":"orderedList"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[[]]},"metadata":{"role":"collection","title":"NordicDFU","roleHeading":"Framework","modules":[{"name":"NordicDFU"}],"externalID":"NordicDFU","symbolKind":"module"},"identifier":{"url":"doc:\/\/NordicDFU\/documentation\/NordicDFU","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"title":"Initialization","identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceDelegate","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUError","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelectorDelegate","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelector"]},{"identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmware","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareSize","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareType","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareError","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUStreamZipError","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUStreamHexError"],"title":"Firmware"},{"identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUProgressDelegate"],"title":"Reporting progress"},{"identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/LoggerDelegate","doc:\/\/NordicDFU\/documentation\/NordicDFU\/LogLevel"],"title":"Logging"},{"title":"Advanced","identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/LegacyDFUServiceInitiator","doc:\/\/NordicDFU\/documentation\/NordicDFU\/SecureDFUServiceInitiator","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuidHelper","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuid","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuidType","doc:\/\/NordicDFU\/documentation\/NordicDFU\/IntelHex2BinConverter"]},{"title":"Protocols","identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/DataConvertible"]},{"identifiers":["doc:\/\/NordicDFU\/documentation\/NordicDFU\/Foundation","doc:\/\/NordicDFU\/documentation\/NordicDFU\/Swift"],"title":"Extended Modules"}],"references":{"doc://NordicDFU/documentation/NordicDFU/DFUUuidHelper":{"navigatorTitle":[{"text":"DFUUuidHelper","kind":"identifier"}],"abstract":[{"type":"text","text":"UUID Helper for DFU Process."}],"type":"topic","url":"\/documentation\/nordicdfu\/dfuuuidhelper","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuidHelper","title":"DFUUuidHelper","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"DFUUuidHelper","kind":"identifier"}],"role":"symbol"},"doc://NordicDFU/documentation/NordicDFU/LoggerDelegate":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/LoggerDelegate","url":"\/documentation\/nordicdfu\/loggerdelegate","abstract":[{"type":"text","text":"The Logger delegate."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"LoggerDelegate","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"LoggerDelegate"}],"title":"LoggerDelegate"},"doc://NordicDFU/documentation/NordicDFU/DFUStreamZipError":{"url":"\/documentation\/nordicdfu\/dfustreamziperror","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUStreamZipError","kind":"identifier"}],"abstract":[{"text":"A DFU Firmware error for ZIP files.","type":"text"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUStreamZipError","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DFUStreamZipError"}],"title":"DFUStreamZipError","type":"topic"},"doc://NordicDFU/documentation/NordicDFU/Swift":{"role":"collection","url":"\/documentation\/nordicdfu\/swift","title":"Swift","kind":"symbol","type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/Swift","abstract":[]},"doc://NordicDFU/documentation/NordicDFU/IntelHex2BinConverter":{"abstract":[{"type":"text","text":"This converter converts Intel HEX file to BIN."}],"type":"topic","url":"\/documentation\/nordicdfu\/intelhex2binconverter","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntelHex2BinConverter"}],"title":"IntelHex2BinConverter","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/IntelHex2BinConverter","navigatorTitle":[{"text":"IntelHex2BinConverter","kind":"identifier"}]},"doc://NordicDFU/documentation/NordicDFU/DFUState":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"DFUState","kind":"identifier"}],"url":"\/documentation\/nordicdfu\/dfustate","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState","title":"DFUState","navigatorTitle":[{"text":"DFUState","kind":"identifier"}],"role":"symbol","abstract":[{"text":"The state of the DFU Service.","type":"text"}]},"doc://NordicDFU/documentation/NordicDFU/DataConvertible":{"navigatorTitle":[{"text":"DataConvertible","kind":"identifier"}],"title":"DataConvertible","kind":"symbol","url":"\/documentation\/nordicdfu\/dataconvertible","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"DataConvertible","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DataConvertible","abstract":[]},"https://docs.nordicsemi.com/bundle/ncs-latest/page/nrf/index.html":{"url":"https:\/\/docs.nordicsemi.com\/bundle\/ncs-latest\/page\/nrf\/index.html","type":"link","identifier":"https:\/\/docs.nordicsemi.com\/bundle\/ncs-latest\/page\/nrf\/index.html","title":"nRFÂ ConnectÂ SDKÂ (NCS)","titleInlineContent":[{"type":"text","text":"nRFÂ ConnectÂ SDKÂ (NCS)"}]},"doc://NordicDFU/documentation/NordicDFU/DFUPeripheralSelector":{"title":"DFUPeripheralSelector","type":"topic","abstract":[{"type":"text","text":"The default implementation of "},{"isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelectorDelegate","type":"reference"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DFUPeripheralSelector"}],"kind":"symbol","url":"\/documentation\/nordicdfu\/dfuperipheralselector","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUPeripheralSelector","kind":"identifier"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelector"},"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","title":"NordicDFU","role":"collection","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}],"type":"topic"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"abstract":[{"text":"The initiator object should be used to initiate updating firmware","type":"text"},{"text":" ","type":"text"},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"text":" ","type":"text"},{"text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK.","type":"text"}],"type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceInitiator"}],"title":"DFUServiceInitiator","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","navigatorTitle":[{"text":"DFUServiceInitiator","kind":"identifier"}]},"doc://NordicDFU/documentation/NordicDFU/DFUProgressDelegate":{"abstract":[{"text":"The progress delegates may be used to notify user about progress updates.","type":"text"}],"type":"topic","url":"\/documentation\/nordicdfu\/dfuprogressdelegate","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUProgressDelegate"}],"title":"DFUProgressDelegate","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUProgressDelegate","navigatorTitle":[{"text":"DFUProgressDelegate","kind":"identifier"}]},"doc://NordicDFU/documentation/NordicDFU/DFUUuidType":{"role":"symbol","url":"\/documentation\/nordicdfu\/dfuuuidtype","navigatorTitle":[{"kind":"identifier","text":"DFUUuidType"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"DFUUuidType","kind":"identifier"}],"title":"DFUUuidType","type":"topic","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuidType","abstract":[{"type":"text","text":"UUID Types for DFU."}]},"doc://NordicDFU/documentation/NordicDFU/LogLevel":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/LogLevel","url":"\/documentation\/nordicdfu\/loglevel","abstract":[{"type":"text","text":"Log levels used by the "},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/LoggerDelegate","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LogLevel"}],"navigatorTitle":[{"text":"LogLevel","kind":"identifier"}],"title":"LogLevel"},"doc://NordicDFU/documentation/NordicDFU/DFUFirmwareError":{"abstract":[{"type":"text","text":"An error thrown when instantiating a "},{"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmware","isActive":true},{"text":" type from an invalid file.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DFUFirmwareError"}],"title":"DFUFirmwareError","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUFirmwareError"}],"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareError","url":"\/documentation\/nordicdfu\/dfufirmwareerror"},"doc://NordicDFU/documentation/NordicDFU/DFUError":{"kind":"symbol","abstract":[{"type":"text","text":"A DFU error enumeration."}],"type":"topic","url":"\/documentation\/nordicdfu\/dfuerror","navigatorTitle":[{"kind":"identifier","text":"DFUError"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUError"}],"title":"DFUError","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUError","role":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUFirmwareType":{"kind":"symbol","role":"symbol","url":"\/documentation\/nordicdfu\/dfufirmwaretype","type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareType","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"DFUFirmwareType","kind":"identifier"}],"navigatorTitle":[{"text":"DFUFirmwareType","kind":"identifier"}],"title":"DFUFirmwareType","abstract":[{"text":"The type of the BIN or HEX file, or selection of content from the Distribution","type":"text"},{"type":"text","text":" "},{"type":"text","text":"packet (ZIP) file."}]},"doc://NordicDFU/documentation/NordicDFU/DFUFirmwareSize":{"title":"DFUFirmwareSize","url":"\/documentation\/nordicdfu\/dfufirmwaresize","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DFUFirmwareSize"}],"kind":"symbol","abstract":[{"type":"text","text":"An object containing sizes of all parts of the new firmware."}],"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmwareSize","navigatorTitle":[{"kind":"identifier","text":"DFUFirmwareSize"}]},"doc://NordicDFU/documentation/NordicDFU/LegacyDFUServiceInitiator":{"abstract":[{"type":"text","text":"This initiator can be used to start a DFU process using Legacy DFU service."}],"type":"topic","url":"\/documentation\/nordicdfu\/legacydfuserviceinitiator","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"LegacyDFUServiceInitiator","kind":"identifier"}],"title":"LegacyDFUServiceInitiator","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/LegacyDFUServiceInitiator","navigatorTitle":[{"kind":"identifier","text":"LegacyDFUServiceInitiator"}]},"https://github.com/NordicSemiconductor/IOS-nRF-Connect-Device-Manager/":{"title":"nRF Connect Device Manager","url":"https:\/\/github.com\/NordicSemiconductor\/IOS-nRF-Connect-Device-Manager\/","identifier":"https:\/\/github.com\/NordicSemiconductor\/IOS-nRF-Connect-Device-Manager\/","titleInlineContent":[{"text":"nRF Connect Device Manager","type":"text"}],"type":"link"},"doc://NordicDFU/documentation/NordicDFU/Foundation":{"title":"Foundation","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/Foundation","type":"topic","url":"\/documentation\/nordicdfu\/foundation","kind":"symbol","role":"collection","abstract":[]},"https://docs.zephyrproject.org/latest/index.html":{"url":"https:\/\/docs.zephyrproject.org\/latest\/index.html","type":"link","identifier":"https:\/\/docs.zephyrproject.org\/latest\/index.html","title":"Zephyr","titleInlineContent":[{"type":"text","text":"Zephyr"}]},"doc://NordicDFU/documentation/NordicDFU/DFUUuid":{"type":"topic","abstract":[{"type":"text","text":"DFU UUID object."}],"url":"\/documentation\/nordicdfu\/dfuuuid","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"DFUUuid","kind":"identifier"}],"title":"DFUUuid","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUUuid","navigatorTitle":[{"text":"DFUUuid","kind":"identifier"}]},"doc://NordicDFU/documentation/NordicDFU/DFUServiceController":{"navigatorTitle":[{"kind":"identifier","text":"DFUServiceController"}],"title":"DFUServiceController","url":"\/documentation\/nordicdfu\/dfuservicecontroller","type":"topic","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUServiceController","kind":"identifier"}],"abstract":[{"type":"text","text":"The controller allows pausing, resuming or aborting the ongoing DFU operation."}],"role":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceDelegate":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceDelegate","url":"\/documentation\/nordicdfu\/dfuservicedelegate","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DFUServiceDelegate","kind":"identifier"}],"abstract":[{"type":"text","text":"The service delegate reports about state changes and errors."}],"navigatorTitle":[{"text":"DFUServiceDelegate","kind":"identifier"}],"title":"DFUServiceDelegate","kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUPeripheralSelectorDelegate":{"title":"DFUPeripheralSelectorDelegate","type":"topic","abstract":[{"type":"text","text":"The DFU peripheral selector delegate is used to select the device advertising in"},{"text":" ","type":"text"},{"type":"text","text":"DFU bootloader mode after switching from application mode."}],"role":"symbol","navigatorTitle":[{"text":"DFUPeripheralSelectorDelegate","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/nordicdfu\/dfuperipheralselectordelegate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUPeripheralSelectorDelegate","kind":"identifier"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelectorDelegate"},"doc://NordicDFU/documentation/NordicDFU/SecureDFUServiceInitiator":{"abstract":[{"type":"text","text":"This initiator can be used to start a DFU process using Secure DFU service."}],"type":"topic","url":"\/documentation\/nordicdfu\/securedfuserviceinitiator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SecureDFUServiceInitiator","kind":"identifier"}],"title":"SecureDFUServiceInitiator","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/SecureDFUServiceInitiator","navigatorTitle":[{"text":"SecureDFUServiceInitiator","kind":"identifier"}]},"doc://NordicDFU/documentation/NordicDFU/DFUFirmware":{"type":"topic","abstract":[{"text":"The DFU Firmware object wraps the firmware file and provides access to its content.","type":"text"}],"url":"\/documentation\/nordicdfu\/dfufirmware","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUFirmware","title":"DFUFirmware","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUFirmware"}],"kind":"symbol","navigatorTitle":[{"text":"DFUFirmware","kind":"identifier"}]},"doc://NordicDFU/documentation/NordicDFU/DFUStreamHexError":{"title":"DFUStreamHexError","url":"\/documentation\/nordicdfu\/dfustreamhexerror","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DFUStreamHexError"}],"kind":"symbol","abstract":[{"type":"text","text":"A DFU Firmware error for a HEX files."}],"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUStreamHexError","navigatorTitle":[{"text":"DFUStreamHexError","kind":"identifier"}]},"https://infocenter.nordicsemi.com/topic/struct_sdk/struct/sdk_nrf5_latest.html?cp=9_1":{"title":"nRF5Â SDK","url":"https:\/\/infocenter.nordicsemi.com\/topic\/struct_sdk\/struct\/sdk_nrf5_latest.html?cp=9_1","identifier":"https:\/\/infocenter.nordicsemi.com\/topic\/struct_sdk\/struct\/sdk_nrf5_latest.html?cp=9_1","titleInlineContent":[{"text":"nRF5Â SDK","type":"text"}],"type":"link"}}}