{"identifier":{"url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/forceDfu","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"forceDfu","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"name":"Important","style":"important","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This property is only meaningful for devices supporting Legacy DFU without"},{"text":" ","type":"text"},{"type":"text","text":"DFU Version characteristic  (nRF5 SDK 4.3 - 7) and is ignored otherwise."}],"type":"paragraph"}]},{"inlineContent":[{"type":"text","text":"Setting this property to "},{"code":"true","type":"codeVoice"},{"text":" will prevent from jumping to the DFU Bootloader","type":"text"},{"type":"text","text":" "},{"type":"text","text":"mode in case there is no DFU Version characteristic. Use it if the DFU operation"},{"type":"text","text":" "},{"text":"can be handled by your device running in the application mode. If the DFU Version","type":"text"},{"text":" ","type":"text"},{"text":"characteristic exists, the information whether to begin DFU operation, or jump to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bootloader, is taken from the characteristic’s value. The value returned equal to"},{"type":"text","text":" "},{"type":"codeVoice","code":"0x0100"},{"type":"text","text":" (read as: minor=1, major=0, or version 0.1) means that the device is in the"},{"type":"text","text":" "},{"type":"text","text":"application mode and buttonless jump to DFU Bootloader is supported."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Currently, the following values of the DFU Version characteristic are supported:"}]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"No DFU Version characteristic"}],"type":"strong"},{"text":" - one of the first implementations of DFU Service.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The device may support only Application update (version from SDK 4.3.0), may support"},{"text":" ","type":"text"},{"text":"Soft Device, Bootloader and Application update but without buttonless jump to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"bootloader (SDK 6.0.0) or with buttonless jump (SDK 6.1.0)."}],"type":"paragraph"},{"inlineContent":[{"text":"The DFU Library determines whether the device is in application mode or in DFU","type":"text"},{"type":"text","text":" "},{"text":"Bootloader mode by counting number of services: if no DFU Service found - device","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is in app mode and does not support buttonless jump, if the DFU Service is the only"},{"type":"text","text":" "},{"type":"text","text":"service found (except General Access and General Attribute services) - it assumes"},{"text":" ","type":"text"},{"text":"it is in DFU Bootloader mode and may start DFU immediately, if there is at least","type":"text"},{"type":"text","text":" "},{"type":"text","text":"one service except DFU Service - the device is in application mode and supports"},{"type":"text","text":" "},{"type":"text","text":"buttonless jump. In the last case, you want to perform DFU operation without"},{"type":"text","text":" "},{"text":"jumping - set the ","type":"text"},{"type":"codeVoice","code":"forceDfu"},{"text":" property to ","type":"text"},{"type":"codeVoice","code":"true"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"0.1"}],"type":"strong"},{"type":"text","text":" - Device is in a mode that supports buttonless jump to the DFU Bootloader."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"0.5","type":"text"}],"type":"strong"},{"text":" - Device can handle DFU operation. Extended Init packet is required.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Bond information is lost in the bootloader mode and after updating an app."},{"type":"text","text":" "},{"text":"Released in SDK 7.0.0.","type":"text"}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"0.6","type":"text"}]},{"type":"text","text":" - Bond information is kept in bootloader mode and may be kept after"},{"text":" ","type":"text"},{"text":"updating application (DFU Bootloader must be configured to preserve the bond","type":"text"},{"type":"text","text":" "},{"text":"information).","type":"text"}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"text":"0.7","type":"text"}],"type":"strong"},{"type":"text","text":" - The SHA-256 firmware hash is used in the Extended Init Packet instead"},{"text":" ","type":"text"},{"type":"text","text":"of CRC-16. This feature is transparent for the DFU Service."}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"0.8"}]},{"text":" - The Extended Init Packet is signed using the private key. The bootloader,","type":"text"},{"text":" ","type":"text"},{"text":"using the public key, is able to verify the content. Released in SDK 9.0.0 as","type":"text"},{"type":"text","text":" "},{"type":"text","text":"experimental feature."},{"text":" ","type":"text"},{"text":"Caution! The firmware type (Application, Bootloader, SoftDevice or SoftDevice +","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Bootloader) is not encrypted as it is not a part of the Extended Init Packet."},{"type":"text","text":" "},{"text":"A change in the protocol will be required to fix this issue.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"By default the DFU Library will try to switch the device to the DFU Bootloader","type":"text"},{"type":"text","text":" "},{"type":"text","text":"mode if it finds more services then one (DFU Service). It assumes it is already"},{"type":"text","text":" "},{"type":"text","text":"in the bootloader mode if the only service found is the DFU Service. Setting the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"forceDfu"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" will prevent from jumping in these both cases."}]}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"metadata":{"modules":[{"name":"NordicDFU"}],"symbolKind":"property","title":"forceDfu","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"forceDfu"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(py)forceDfu","role":"symbol","roleHeading":"Instance Property"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/forcedfu"]}],"abstract":[{"text":"Should the Legacy DFU service assume the device is in bootloader mode despite","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"absence of the DFU Version characteristic."}],"references":{"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"abstract":[{"text":"The initiator object should be used to initiate updating firmware","type":"text"},{"text":" ","type":"text"},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductor’s Legacy or","type":"text"},{"text":" ","type":"text"},{"text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK.","type":"text"}],"type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceInitiator"}],"title":"DFUServiceInitiator","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","navigatorTitle":[{"text":"DFUServiceInitiator","kind":"identifier"}]},"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","title":"NordicDFU","role":"collection","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}],"type":"topic"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/forceDfu":{"type":"topic","abstract":[{"type":"text","text":"Should the Legacy DFU service assume the device is in bootloader mode despite"},{"text":" ","type":"text"},{"text":"absence of the DFU Version characteristic.","type":"text"}],"url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/forcedfu","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"forceDfu"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"forceDfu","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/forceDfu"}}}