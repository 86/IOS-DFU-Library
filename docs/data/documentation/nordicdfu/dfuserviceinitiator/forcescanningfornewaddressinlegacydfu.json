{"abstract":[{"type":"text","text":"Should the Legacy DFU service scan for the device after switching to bootloader mode."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"forceScanningForNewAddressInLegacyDfu"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"By default, the Legacy DFU bootloader, starting from SDK 7.1, when enabled using","type":"text"},{"text":" ","type":"text"},{"text":"buttonless service, advertises with the same Bluetooth address as the application","type":"text"},{"type":"text","text":" "},{"type":"text","text":"using direct advertisement. This complies with the Bluetooth specification."},{"text":" ","type":"text"},{"type":"text","text":"However, on iOS 13.x, iPhones and iPads use random addresses on each"},{"type":"text","text":" "},{"text":"connection and do not expect direct advertising unless bonded. This causes those","type":"text"},{"type":"text","text":" "},{"text":"packets being missed and not reported to the library, making reconnection to the","type":"text"},{"type":"text","text":" "},{"text":"bootloader and proceeding with DFU impossible.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"A solution requires modifying either the bootloader not to use the direct advertising,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"or the application not to share the peer data with bootloader, in which case it will"},{"type":"text","text":" "},{"text":"advertise indirectly using address +1, like it does when the switch to bootloader mode","type":"text"},{"text":" ","type":"text"},{"text":"is initiated with a button. After such modification, setting this flag to true will make the","type":"text"},{"text":" ","type":"text"},{"text":"library scan for the bootloader using ","type":"text"},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelector","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Setting this flag to ","type":"text"},{"code":"true","type":"codeVoice"},{"type":"text","text":" without modifying the bootloader behavior will break the DFU,"},{"text":" ","type":"text"},{"type":"text","text":"as the direct advertising packets are empty and will not pass the default"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelector"},{"text":".","type":"text"}]},{"name":"Since","content":[{"inlineContent":[{"text":"4.8.0","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"}]}],"identifier":{"url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/forceScanningForNewAddressInLegacyDfu","interfaceLanguage":"swift"},"metadata":{"title":"forceScanningForNewAddressInLegacyDfu","modules":[{"name":"NordicDFU"}],"role":"symbol","externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(py)forceScanningForNewAddressInLegacyDfu","roleHeading":"Instance Property","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"forceScanningForNewAddressInLegacyDfu","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/forcescanningfornewaddressinlegacydfu"]}],"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DFUServiceInitiator","kind":"identifier"}],"title":"DFUServiceInitiator","navigatorTitle":[{"kind":"identifier","text":"DFUServiceInitiator"}],"role":"symbol","abstract":[{"type":"text","text":"The initiator object should be used to initiate updating firmware"},{"type":"text","text":" "},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK."}],"kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","title":"NordicDFU","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","role":"collection","type":"topic","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}]},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/forceScanningForNewAddressInLegacyDfu":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"forceScanningForNewAddressInLegacyDfu","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"forceScanningForNewAddressInLegacyDfu","type":"topic","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/forceScanningForNewAddressInLegacyDfu","role":"symbol","abstract":[{"type":"text","text":"Should the Legacy DFU service scan for the device after switching to bootloader mode."}],"url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/forcescanningfornewaddressinlegacydfu"},"doc://NordicDFU/documentation/NordicDFU/DFUPeripheralSelector":{"url":"\/documentation\/nordicdfu\/dfuperipheralselector","abstract":[{"type":"text","text":"The default implementation of "},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelectorDelegate","isActive":true,"type":"reference"},{"text":".","type":"text"}],"navigatorTitle":[{"text":"DFUPeripheralSelector","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"DFUPeripheralSelector","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUPeripheralSelector"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelector"},"doc://NordicDFU/documentation/NordicDFU/DFUPeripheralSelectorDelegate":{"url":"\/documentation\/nordicdfu\/dfuperipheralselectordelegate","abstract":[{"text":"The DFU peripheral selector delegate is used to select the device advertising in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"DFU bootloader mode after switching from application mode."}],"navigatorTitle":[{"kind":"identifier","text":"DFUPeripheralSelectorDelegate"}],"kind":"symbol","role":"symbol","title":"DFUPeripheralSelectorDelegate","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUPeripheralSelectorDelegate","kind":"identifier"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUPeripheralSelectorDelegate"}}}