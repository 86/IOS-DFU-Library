{"metadata":{"symbolKind":"init","externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(im)initWithCentralManager:target:","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"centralManager"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)CBCentralManager","text":"CBCentralManager","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"target"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)CBPeripheral","text":"CBPeripheral","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(centralManager:target:)","platforms":[],"role":"symbol","roleHeading":"Initializer","modules":[{"name":"NordicDFU"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"centralManager","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)CBCentralManager","kind":"typeIdentifier","text":"CBCentralManager"},{"text":", ","kind":"text"},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"text":")","kind":"text"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Manager that will be used to connect to the peripheral","type":"text"}]}],"name":"centralManager"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The DFU target peripheral.","type":"text"}]}],"name":"target"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The initiator instance.","type":"text"}]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This constructor takes control over the central manager and peripheral objects.","type":"text"},{"type":"text","text":" "},{"text":"Their delegates will be set to internal library objects and will NOT be reverted to","type":"text"},{"type":"text","text":" "},{"text":"original objects, instead they will be set to nil when DFU is complete, aborted or","type":"text"},{"type":"text","text":" "},{"text":"has failed with an error. An app should restore the delegates (if needed) after","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"receiving state "},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState\/completed","isActive":true,"type":"reference"},{"text":" or ","type":"text"},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState\/aborted","type":"reference","isActive":true},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"or receiving an error.","type":"text"}]},{"content":[{"inlineContent":[{"type":"text","text":"This constructor has been deprecated in favor of"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(queue:delegateQueue:progressQueue:loggerQueue:centralManagerOptions:)"},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"which does not take control over the given peripheral, using a copy instead.","type":"text"}],"type":"paragraph"}],"name":"Important","type":"aside","style":"important"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/peripheralSelector","isActive":true,"type":"reference"},{"type":"text","text":" - a selector used when scanning for a device"},{"text":" ","type":"text"},{"text":"in DFU Bootloader mode in case you want to update a SoftDevice and","type":"text"},{"type":"text","text":" "},{"text":"Application from a single ZIP Distribution Packet.","type":"text"}]}],"name":"See Also","style":"note"}],"kind":"content"}],"abstract":[{"text":"Creates the ","type":"text"},{"code":"DFUServiceInitializer","type":"codeVoice"},{"text":" which allows updating firmware on","type":"text"},{"type":"text","text":" "},{"text":"Bluetooth LE devices supporting Legacy or Secure DFU from nRF5 SDK from","type":"text"},{"type":"text","text":" "},{"text":"Nordic Semiconductor..","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/init(centralmanager:target:)"]}],"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"deprecationSummary":[{"inlineContent":[{"text":"Use init(queue: DispatchQueue?) instead.","type":"text"}],"type":"paragraph"}],"references":{"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"abstract":[{"text":"The initiator object should be used to initiate updating firmware","type":"text"},{"text":" ","type":"text"},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"text":" ","type":"text"},{"text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK.","type":"text"}],"type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceInitiator"}],"title":"DFUServiceInitiator","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","navigatorTitle":[{"text":"DFUServiceInitiator","kind":"identifier"}]},"doc://NordicDFU/documentation/NordicDFU/DFUState/completed":{"kind":"symbol","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"completed"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState\/completed","title":"DFUState.completed","url":"\/documentation\/nordicdfu\/dfustate\/completed","role":"symbol","abstract":[{"text":"DFU operation is completed and successful.","type":"text"}]},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/peripheralSelector":{"url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/peripheralselector","kind":"symbol","title":"peripheralSelector","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/peripheralSelector","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"peripheralSelector","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@NordicDFU@objc(pl)DFUPeripheralSelectorDelegate","text":"DFUPeripheralSelectorDelegate","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"The selector object is used when the device needs to disconnect and start"},{"type":"text","text":" "},{"type":"text","text":"advertising with a different address to avoid caching problems, for example"},{"type":"text","text":" "},{"text":"after switching to the Bootloader mode, or during sending a firmware containing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a SoftDevice (or SoftDevice and Bootloader) and the Application."}],"type":"topic"},"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","title":"NordicDFU","role":"collection","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}],"type":"topic"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/init(centralManager:target:)":{"type":"topic","abstract":[{"type":"text","text":"Creates the "},{"type":"codeVoice","code":"DFUServiceInitializer"},{"text":" which allows updating firmware on","type":"text"},{"type":"text","text":" "},{"text":"Bluetooth LE devices supporting Legacy or Secure DFU from nRF5 SDK from","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Nordic Semiconductor.."}],"kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"centralManager","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)CBCentralManager","text":"CBCentralManager","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":")"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)","title":"init(centralManager:target:)","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/init(centralmanager:target:)","deprecated":true},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/init(queue:delegateQueue:progressQueue:loggerQueue:centralManagerOptions:)":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(queue:delegateQueue:progressQueue:loggerQueue:centralManagerOptions:)","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/init(queue:delegatequeue:progressqueue:loggerqueue:centralmanageroptions:)","role":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)OS_dispatch_queue","kind":"typeIdentifier","text":"DispatchQueue"},{"kind":"text","text":"?, "},{"text":"delegateQueue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)OS_dispatch_queue","text":"DispatchQueue","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"progressQueue"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)OS_dispatch_queue","text":"DispatchQueue","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"loggerQueue"},{"kind":"text","text":": "},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)OS_dispatch_queue"},{"text":", ","kind":"text"},{"text":"centralManagerOptions","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"]?)","kind":"text"}],"abstract":[{"type":"text","text":"Creates the "},{"type":"codeVoice","code":"DFUServiceInitializer"},{"text":" which allows updating firmware on","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Bluetooth LE devices supporting Legacy or Secure DFU from nRF5 SDK from"},{"text":" ","type":"text"},{"text":"Nordic Semiconductor..","type":"text"}],"title":"init(queue:delegateQueue:progressQueue:loggerQueue:centralManagerOptions:)","kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUState/aborted":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState\/aborted","url":"\/documentation\/nordicdfu\/dfustate\/aborted","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"aborted"}],"abstract":[{"text":"DFU operation was aborted.","type":"text"}],"title":"DFUState.aborted","kind":"symbol"}}}