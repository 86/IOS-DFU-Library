{"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use init(queue: DispatchQueue?) instead."}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/init(centralmanager:target:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"text":"centralManager","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBCentralManager","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBCentralManager"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"target"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)CBPeripheral","kind":"typeIdentifier","text":"CBPeripheral"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"centralManager","content":[{"type":"paragraph","inlineContent":[{"text":"Manager that will be used to connect to the peripheral","type":"text"}]}]},{"name":"target","content":[{"inlineContent":[{"type":"text","text":"The DFU target peripheral."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The initiator instance.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"text":"This constructor takes control over the central manager and peripheral objects.","type":"text"},{"text":" ","type":"text"},{"text":"Their delegates will be set to internal library objects and will NOT be reverted to","type":"text"},{"text":" ","type":"text"},{"text":"original objects, instead they will be set to nil when DFU is complete, aborted or","type":"text"},{"type":"text","text":" "},{"text":"has failed with an error. An app should restore the delegates (if needed) after","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"receiving state "},{"type":"reference","isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState\/completed"},{"text":" or ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState\/aborted"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"or receiving an error.","type":"text"}],"type":"paragraph"},{"name":"Important","style":"important","content":[{"inlineContent":[{"text":"This constructor has been deprecated in favor of","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(queue:delegateQueue:progressQueue:loggerQueue:centralManagerOptions:)"},{"type":"text","text":","},{"type":"text","text":" "},{"text":"which does not take control over the given peripheral, using a copy instead.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/peripheralSelector","isActive":true},{"type":"text","text":" - a selector used when scanning for a device"},{"type":"text","text":" "},{"type":"text","text":"in DFU Bootloader mode in case you want to update a SoftDevice and"},{"type":"text","text":" "},{"type":"text","text":"Application from a single ZIP Distribution Packet."}]}],"style":"note","name":"See Also","type":"aside"}]}],"metadata":{"modules":[{"name":"NordicDFU"}],"roleHeading":"Initializer","externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(im)initWithCentralManager:target:","symbolKind":"init","platforms":[],"role":"symbol","title":"init(centralManager:target:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"centralManager"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)CBCentralManager","text":"CBCentralManager","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"sections":[],"abstract":[{"text":"Creates the ","type":"text"},{"code":"DFUServiceInitializer","type":"codeVoice"},{"text":" which allows updating firmware on","type":"text"},{"type":"text","text":" "},{"text":"Bluetooth LE devices supporting Legacy or Secure DFU from nRF5 SDK from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Nordic Semiconductor.."}],"references":{"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","title":"NordicDFU","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","role":"collection","type":"topic","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}]},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DFUServiceInitiator","kind":"identifier"}],"title":"DFUServiceInitiator","navigatorTitle":[{"kind":"identifier","text":"DFUServiceInitiator"}],"role":"symbol","abstract":[{"type":"text","text":"The initiator object should be used to initiate updating firmware"},{"type":"text","text":" "},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK."}],"kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUState/aborted":{"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState\/aborted","title":"DFUState.aborted","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"aborted","kind":"identifier"}],"abstract":[{"type":"text","text":"DFU operation was aborted."}],"kind":"symbol","url":"\/documentation\/nordicdfu\/dfustate\/aborted","role":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/peripheralSelector":{"abstract":[{"type":"text","text":"The selector object is used when the device needs to disconnect and start"},{"type":"text","text":" "},{"type":"text","text":"advertising with a different address to avoid caching problems, for example"},{"text":" ","type":"text"},{"type":"text","text":"after switching to the Bootloader mode, or during sending a firmware containing"},{"type":"text","text":" "},{"type":"text","text":"a SoftDevice (or SoftDevice and Bootloader) and the Application."}],"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/peripheralSelector","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"peripheralSelector","kind":"identifier"},{"kind":"text","text":": "},{"text":"DFUPeripheralSelectorDelegate","preciseIdentifier":"c:@M@NordicDFU@objc(pl)DFUPeripheralSelectorDelegate","kind":"typeIdentifier"}],"kind":"symbol","title":"peripheralSelector","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/peripheralselector"},"doc://NordicDFU/documentation/NordicDFU/DFUState/completed":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"completed"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUState\/completed","title":"DFUState.completed","type":"topic","abstract":[{"text":"DFU operation is completed and successful.","type":"text"}],"url":"\/documentation\/nordicdfu\/dfustate\/completed"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/init(queue:delegateQueue:progressQueue:loggerQueue:centralManagerOptions:)":{"abstract":[{"type":"text","text":"Creates the "},{"type":"codeVoice","code":"DFUServiceInitializer"},{"text":" which allows updating firmware on","type":"text"},{"text":" ","type":"text"},{"text":"Bluetooth LE devices supporting Legacy or Secure DFU from nRF5 SDK from","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Nordic Semiconductor.."}],"url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/init(queue:delegatequeue:progressqueue:loggerqueue:centralmanageroptions:)","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(queue:delegateQueue:progressQueue:loggerQueue:centralManagerOptions:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)OS_dispatch_queue","text":"DispatchQueue","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"delegateQueue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)OS_dispatch_queue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"progressQueue"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)OS_dispatch_queue","text":"DispatchQueue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"loggerQueue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)OS_dispatch_queue","text":"DispatchQueue"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"centralManagerOptions"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" : "},{"kind":"keyword","text":"Any"},{"text":"]?)","kind":"text"}],"title":"init(queue:delegateQueue:progressQueue:loggerQueue:centralManagerOptions:)","kind":"symbol","type":"topic"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/init(centralManager:target:)":{"title":"init(centralManager:target:)","type":"topic","kind":"symbol","deprecated":true,"role":"symbol","abstract":[{"type":"text","text":"Creates the "},{"type":"codeVoice","code":"DFUServiceInitializer"},{"type":"text","text":" which allows updating firmware on"},{"type":"text","text":" "},{"type":"text","text":"Bluetooth LE devices supporting Legacy or Secure DFU from nRF5 SDK from"},{"text":" ","type":"text"},{"type":"text","text":"Nordic Semiconductor.."}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"centralManager"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBCentralManager","preciseIdentifier":"c:objc(cs)CBCentralManager"},{"text":", ","kind":"text"},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":")"}],"url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/init(centralmanager:target:)"}}}