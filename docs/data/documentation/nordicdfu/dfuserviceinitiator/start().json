{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"start"},{"text":"() -> ","kind":"text"},{"text":"DFUServiceController","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"inlineContent":[{"text":"A ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController"},{"type":"text","text":" object that can be used to control the"},{"type":"text","text":" "},{"text":"DFU operation, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", if the file was not set, or the target"},{"text":" ","type":"text"},{"type":"text","text":"peripheral was not set."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"When started, the service will automatically connect to the target, switch to","type":"text"},{"text":" ","type":"text"},{"text":"DFU Bootloader mode (if necessary), and send all the content of the specified","type":"text"},{"type":"text","text":" "},{"text":"firmware file in one or two connections.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Two connections will be used if a ZIP file contains a SoftDevice and\/or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Bootloader and an Application. First the SoftDevice and\/or Bootloader will"},{"text":" ","type":"text"},{"type":"text","text":"be transferred, then the service will disconnect, reconnect to the (new)"},{"text":" ","type":"text"},{"type":"text","text":"Bootloader again and send the Application (unless the target supports"},{"text":" ","type":"text"},{"type":"text","text":"receiving all files in a single connection). The peripheral will NOT be"},{"text":" ","type":"text"},{"type":"text","text":"reconnected after the DFU is completed, aborted or has failed."}],"type":"paragraph"},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)","isActive":true},{"text":" or ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(targetWithIdentifier:)"},{"type":"text","text":" instead."}]}],"name":"Important"}]}],"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"variants":[{"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/start()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"NordicDFU"}],"title":"start()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(im)start","symbolKind":"method","platforms":[],"role":"symbol"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use start(target: CBPeripheral) instead."}]}],"abstract":[{"text":"Starts sending the specified firmware to the DFU target specified in","type":"text"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)","isActive":true},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start()"},"references":{"doc://NordicDFU/documentation/NordicDFU":{"url":"\/documentation\/nordicdfu","title":"NordicDFU","role":"collection","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceController":{"navigatorTitle":[{"text":"DFUServiceController","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceController"}],"url":"\/documentation\/nordicdfu\/dfuservicecontroller","title":"DFUServiceController","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","abstract":[{"text":"The controller allows pausing, resuming or aborting the ongoing DFU operation.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start()":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start()","title":"start()","kind":"symbol","abstract":[{"type":"text","text":"Starts sending the specified firmware to the DFU target specified in"},{"type":"text","text":" "},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"role":"symbol","deprecated":true,"type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start(targetWithIdentifier:)":{"title":"start(targetWithIdentifier:)","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start(targetwithidentifier:)","abstract":[{"type":"text","text":"Starts sending the specified firmware to the DFU target with given identifier."}],"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(targetWithIdentifier:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"targetWithIdentifier","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4UUIDV","text":"UUID"},{"kind":"text","text":") -> "},{"text":"DFUServiceController","kind":"typeIdentifier","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController"},{"kind":"text","text":"?"}]},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/init(centralManager:target:)":{"url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/init(centralmanager:target:)","type":"topic","title":"init(centralManager:target:)","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)","abstract":[{"type":"text","text":"Creates the "},{"type":"codeVoice","code":"DFUServiceInitializer"},{"text":" which allows updating firmware on","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Bluetooth LE devices supporting Legacy or Secure DFU from nRF5 SDK from"},{"text":" ","type":"text"},{"type":"text","text":"Nordic Semiconductor.."}],"kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"centralManager","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBCentralManager","text":"CBCentralManager"},{"kind":"text","text":", "},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral","kind":"typeIdentifier"},{"kind":"text","text":")"}],"deprecated":true},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"title":"DFUServiceInitiator","type":"topic","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","abstract":[{"text":"The initiator object should be used to initiate updating firmware","type":"text"},{"text":" ","type":"text"},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"DFUServiceInitiator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DFUServiceInitiator"}],"url":"\/documentation\/nordicdfu\/dfuserviceinitiator"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start(target:)":{"title":"start(target:)","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start(target:)","abstract":[{"type":"text","text":"Starts sending the specified firmware to the given DFU target."}],"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"text":"(","kind":"text"},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","kind":"typeIdentifier","text":"DFUServiceController"},{"kind":"text","text":"?"}]}}}