{"abstract":[{"type":"text","text":"Starts sending the specified firmware to the DFU target specified in"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)","type":"reference"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/start()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"DFUServiceController","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","kind":"typeIdentifier","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController"},{"text":"?","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","type":"reference"},{"type":"text","text":" object that can be used to control the"},{"type":"text","text":" "},{"text":"DFU operation, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", if the file was not set, or the target"},{"text":" ","type":"text"},{"type":"text","text":"peripheral was not set."}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"When started, the service will automatically connect to the target, switch to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"DFU Bootloader mode (if necessary), and send all the content of the specified"},{"type":"text","text":" "},{"text":"firmware file in one or two connections.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Two connections will be used if a ZIP file contains a SoftDevice and\/or"},{"text":" ","type":"text"},{"type":"text","text":"Bootloader and an Application. First the SoftDevice and\/or Bootloader will"},{"text":" ","type":"text"},{"type":"text","text":"be transferred, then the service will disconnect, reconnect to the (new)"},{"type":"text","text":" "},{"text":"Bootloader again and send the Application (unless the target supports","type":"text"},{"text":" ","type":"text"},{"text":"receiving all files in a single connection). The peripheral will NOT be","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reconnected after the DFU is completed, aborted or has failed."}],"type":"paragraph"},{"type":"aside","name":"Important","style":"important","content":[{"inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)","type":"reference"},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(targetWithIdentifier:)","isActive":true},{"type":"text","text":" instead."}],"type":"paragraph"}]}],"kind":"content"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use start(target: CBPeripheral) instead."}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start()"},"metadata":{"symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"DFUServiceController","kind":"typeIdentifier","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController"},{"kind":"text","text":"?"}],"platforms":[],"externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(im)start","roleHeading":"Instance Method","title":"start()","modules":[{"name":"NordicDFU"}]},"sections":[],"kind":"symbol","references":{"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start(target:)":{"type":"topic","abstract":[{"text":"Starts sending the specified firmware to the given DFU target.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)","title":"start(target:)","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start(target:)"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start(targetWithIdentifier:)":{"title":"start(targetWithIdentifier:)","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start(targetwithidentifier:)","type":"topic","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(targetWithIdentifier:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"kind":"text","text":"("},{"text":"targetWithIdentifier","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4UUIDV","text":"UUID"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Starts sending the specified firmware to the DFU target with given identifier."}],"role":"symbol"},"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","title":"NordicDFU","role":"collection","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}],"type":"topic"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/init(centralManager:target:)":{"type":"topic","abstract":[{"type":"text","text":"Creates the "},{"type":"codeVoice","code":"DFUServiceInitializer"},{"text":" which allows updating firmware on","type":"text"},{"type":"text","text":" "},{"text":"Bluetooth LE devices supporting Legacy or Secure DFU from nRF5 SDK from","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Nordic Semiconductor.."}],"kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"centralManager","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)CBCentralManager","text":"CBCentralManager","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":")"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)","title":"init(centralManager:target:)","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/init(centralmanager:target:)","deprecated":true},"doc://NordicDFU/documentation/NordicDFU/DFUServiceController":{"navigatorTitle":[{"kind":"identifier","text":"DFUServiceController"}],"title":"DFUServiceController","url":"\/documentation\/nordicdfu\/dfuservicecontroller","type":"topic","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUServiceController","kind":"identifier"}],"abstract":[{"type":"text","text":"The controller allows pausing, resuming or aborting the ongoing DFU operation."}],"role":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start()":{"type":"topic","abstract":[{"type":"text","text":"Starts sending the specified firmware to the DFU target specified in"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"DFUServiceController","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start()","title":"start()","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start()","deprecated":true},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"abstract":[{"text":"The initiator object should be used to initiate updating firmware","type":"text"},{"text":" ","type":"text"},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"text":" ","type":"text"},{"text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK.","type":"text"}],"type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceInitiator"}],"title":"DFUServiceInitiator","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","navigatorTitle":[{"text":"DFUServiceInitiator","kind":"identifier"}]}}}