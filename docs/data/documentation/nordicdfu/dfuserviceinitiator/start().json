{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/start()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@objc"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","kind":"typeIdentifier","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","text":"DFUServiceController"},{"kind":"text","text":"?"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"A "},{"isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","type":"reference"},{"type":"text","text":" object that can be used to control the"},{"type":"text","text":" "},{"text":"DFU operation, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", if the file was not set, or the target"},{"text":" ","type":"text"},{"type":"text","text":"peripheral was not set."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"When started, the service will automatically connect to the target, switch to"},{"type":"text","text":" "},{"type":"text","text":"DFU Bootloader mode (if necessary), and send all the content of the specified"},{"text":" ","type":"text"},{"text":"firmware file in one or two connections.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Two connections will be used if a ZIP file contains a SoftDevice and\/or"},{"type":"text","text":" "},{"text":"Bootloader and an Application. First the SoftDevice and\/or Bootloader will","type":"text"},{"text":" ","type":"text"},{"text":"be transferred, then the service will disconnect, reconnect to the (new)","type":"text"},{"type":"text","text":" "},{"text":"Bootloader again and send the Application (unless the target supports","type":"text"},{"type":"text","text":" "},{"text":"receiving all files in a single connection). The peripheral will NOT be","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"reconnected after the DFU is completed, aborted or has failed."}],"type":"paragraph"},{"name":"Important","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Use "},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)","isActive":true,"type":"reference"},{"text":" or ","type":"text"},{"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(targetWithIdentifier:)","isActive":true},{"text":" instead.","type":"text"}],"type":"paragraph"}],"style":"important"}]}],"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start()"},"kind":"symbol","metadata":{"modules":[{"name":"NordicDFU"}],"title":"start()","roleHeading":"Instance Method","role":"symbol","platforms":[],"symbolKind":"method","externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(im)start","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"DFUServiceController","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"deprecationSummary":[{"inlineContent":[{"text":"Use start(target: CBPeripheral) instead.","type":"text"}],"type":"paragraph"}],"abstract":[{"text":"Starts sending the specified firmware to the DFU target specified in","type":"text"},{"type":"text","text":" "},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)","isActive":true,"type":"reference"},{"type":"text","text":"."}],"references":{"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start()":{"title":"start()","type":"topic","kind":"symbol","deprecated":true,"role":"symbol","abstract":[{"type":"text","text":"Starts sending the specified firmware to the DFU target specified in"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)"},{"text":".","type":"text"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","kind":"typeIdentifier","text":"DFUServiceController"},{"kind":"text","text":"?"}],"url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start()"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceController":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceController"}],"title":"DFUServiceController","navigatorTitle":[{"text":"DFUServiceController","kind":"identifier"}],"type":"topic","abstract":[{"text":"The controller allows pausing, resuming or aborting the ongoing DFU operation.","type":"text"}],"url":"\/documentation\/nordicdfu\/dfuservicecontroller"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/init(centralManager:target:)":{"title":"init(centralManager:target:)","type":"topic","kind":"symbol","deprecated":true,"role":"symbol","abstract":[{"type":"text","text":"Creates the "},{"type":"codeVoice","code":"DFUServiceInitializer"},{"type":"text","text":" which allows updating firmware on"},{"type":"text","text":" "},{"type":"text","text":"Bluetooth LE devices supporting Legacy or Secure DFU from nRF5 SDK from"},{"text":" ","type":"text"},{"type":"text","text":"Nordic Semiconductor.."}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/init(centralManager:target:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"centralManager"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CBCentralManager","preciseIdentifier":"c:objc(cs)CBCentralManager"},{"text":", ","kind":"text"},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":")"}],"url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/init(centralmanager:target:)"},"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","title":"NordicDFU","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","role":"collection","type":"topic","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}]},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DFUServiceInitiator","kind":"identifier"}],"title":"DFUServiceInitiator","navigatorTitle":[{"kind":"identifier","text":"DFUServiceInitiator"}],"role":"symbol","abstract":[{"type":"text","text":"The initiator object should be used to initiate updating firmware"},{"type":"text","text":" "},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK."}],"kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start(target:)":{"abstract":[{"type":"text","text":"Starts sending the specified firmware to the given DFU target."}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"target"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral","text":"CBPeripheral"},{"text":") -> ","kind":"text"},{"text":"DFUServiceController","kind":"typeIdentifier","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController"},{"kind":"text","text":"?"}],"title":"start(target:)","type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start(target:)","kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start(targetWithIdentifier:)":{"title":"start(targetWithIdentifier:)","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Starts sending the specified firmware to the DFU target with given identifier."}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(targetWithIdentifier:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"text":"(","kind":"text"},{"text":"targetWithIdentifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UUID","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4UUIDV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","kind":"typeIdentifier","text":"DFUServiceController"},{"kind":"text","text":"?"}],"url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start(targetwithidentifier:)"}}}