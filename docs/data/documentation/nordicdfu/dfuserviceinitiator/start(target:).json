{"sections":[],"identifier":{"url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)","interfaceLanguage":"swift"},"metadata":{"externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(im)startWithTarget:","role":"symbol","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"target","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)CBPeripheral","text":"CBPeripheral","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"start(target:)","roleHeading":"Instance Method","modules":[{"name":"NordicDFU"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/start(target:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral","text":"CBPeripheral"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","text":"DFUServiceController"},{"kind":"text","text":"?"}]}]},{"parameters":[{"name":"target","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The DFU target peripheral."}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","type":"reference","isActive":true},{"text":" object that can be used to control the DFU","type":"text"},{"text":" ","type":"text"},{"text":"operation, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":", if the file was not set, or the peripheral instance","type":"text"},{"type":"text","text":" "},{"text":"could not be retrieved.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When started, the service will automatically connect to the target, switch to"},{"text":" ","type":"text"},{"text":"DFU Bootloader mode (if necessary), and send all the content of the specified","type":"text"},{"text":" ","type":"text"},{"text":"firmware file in one or two connections. Two connections will be used if a ZIP","type":"text"},{"type":"text","text":" "},{"type":"text","text":"file contains a SoftDevice and\/or Bootloader and an Application. First, the"},{"text":" ","type":"text"},{"text":"SoftDevice and\/or Bootloader will be transferred, then the service will disconnect,","type":"text"},{"type":"text","text":" "},{"text":"reconnect to the (new) Bootloader again and send the Application (unless the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"target supports receiving all files in a single connection). The peripheral"},{"type":"text","text":" "},{"text":"will NOT be reconnected after the DFU is completed, aborted or has failed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This method does not take control over the peripheral.","type":"text"},{"text":" ","type":"text"},{"text":"A new central manager is used, from which a copy of the peripheral is retrieved.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Be warned, that the original peripheral delegate may receive a lot of calls, and"},{"type":"text","text":" "},{"type":"text","text":"it will restart during the process. The app should not send any data to DFU"},{"type":"text","text":" "},{"text":"characteristics when DFU is in progress.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"kind":"symbol","abstract":[{"type":"text","text":"Starts sending the specified firmware to the given DFU target."}],"references":{"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","title":"NordicDFU","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","role":"collection","type":"topic","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}]},"doc://NordicDFU/documentation/NordicDFU/DFUServiceController":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceController"}],"title":"DFUServiceController","navigatorTitle":[{"text":"DFUServiceController","kind":"identifier"}],"type":"topic","abstract":[{"text":"The controller allows pausing, resuming or aborting the ongoing DFU operation.","type":"text"}],"url":"\/documentation\/nordicdfu\/dfuservicecontroller"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start(target:)":{"abstract":[{"type":"text","text":"Starts sending the specified firmware to the given DFU target."}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"target"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral","text":"CBPeripheral"},{"text":") -> ","kind":"text"},{"text":"DFUServiceController","kind":"typeIdentifier","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController"},{"kind":"text","text":"?"}],"title":"start(target:)","type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start(target:)","kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DFUServiceInitiator","kind":"identifier"}],"title":"DFUServiceInitiator","navigatorTitle":[{"kind":"identifier","text":"DFUServiceInitiator"}],"role":"symbol","abstract":[{"type":"text","text":"The initiator object should be used to initiate updating firmware"},{"type":"text","text":" "},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK."}],"kind":"symbol"}}}