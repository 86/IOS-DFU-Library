{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)"},"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"NordicDFU"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral","text":"CBPeripheral"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"role":"symbol","externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(im)startWithTarget:","symbolKind":"method","title":"start(target:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"text":"(","kind":"text"},{"text":"target","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CBPeripheral","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"text":") -> ","kind":"text"},{"text":"DFUServiceController","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The DFU target peripheral."}],"type":"paragraph"}],"name":"target"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"A ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController"},{"text":" object that can be used to control the DFU","type":"text"},{"type":"text","text":" "},{"type":"text","text":"operation, or "},{"code":"nil","type":"codeVoice"},{"text":", if the file was not set, or the peripheral instance","type":"text"},{"text":" ","type":"text"},{"text":"could not be retrieved.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"When started, the service will automatically connect to the target, switch to"},{"text":" ","type":"text"},{"type":"text","text":"DFU Bootloader mode (if necessary), and send all the content of the specified"},{"text":" ","type":"text"},{"type":"text","text":"firmware file in one or two connections. Two connections will be used if a ZIP"},{"text":" ","type":"text"},{"text":"file contains a SoftDevice and\/or Bootloader and an Application. First, the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SoftDevice and\/or Bootloader will be transferred, then the service will disconnect,"},{"type":"text","text":" "},{"type":"text","text":"reconnect to the (new) Bootloader again and send the Application (unless the"},{"text":" ","type":"text"},{"type":"text","text":"target supports receiving all files in a single connection). The peripheral"},{"type":"text","text":" "},{"text":"will NOT be reconnected after the DFU is completed, aborted or has failed.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method does not take control over the peripheral."},{"text":" ","type":"text"},{"text":"A new central manager is used, from which a copy of the peripheral is retrieved.","type":"text"},{"text":" ","type":"text"},{"text":"Be warned, that the original peripheral delegate may receive a lot of calls, and","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"it will restart during the process. The app should not send any data to DFU"},{"text":" ","type":"text"},{"text":"characteristics when DFU is in progress.","type":"text"}]}]}],"sections":[],"variants":[{"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/start(target:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Starts sending the specified firmware to the given DFU target.","type":"text"}],"kind":"symbol","references":{"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"abstract":[{"text":"The initiator object should be used to initiate updating firmware","type":"text"},{"text":" ","type":"text"},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"text":" ","type":"text"},{"text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK.","type":"text"}],"type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceInitiator"}],"title":"DFUServiceInitiator","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","navigatorTitle":[{"text":"DFUServiceInitiator","kind":"identifier"}]},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start(target:)":{"type":"topic","abstract":[{"text":"Starts sending the specified firmware to the given DFU target.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheral"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)","title":"start(target:)","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start(target:)"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceController":{"navigatorTitle":[{"kind":"identifier","text":"DFUServiceController"}],"title":"DFUServiceController","url":"\/documentation\/nordicdfu\/dfuservicecontroller","type":"topic","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUServiceController","kind":"identifier"}],"abstract":[{"type":"text","text":"The controller allows pausing, resuming or aborting the ongoing DFU operation."}],"role":"symbol"},"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","title":"NordicDFU","role":"collection","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}],"type":"topic"}}}