{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"text":"target","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)CBPeripheral","kind":"typeIdentifier","text":"CBPeripheral"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","text":"DFUServiceController","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The DFU target peripheral.","type":"text"}],"type":"paragraph"}],"name":"target"}]},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","isActive":true,"type":"reference"},{"type":"text","text":" object that can be used to control the DFU"},{"type":"text","text":" "},{"type":"text","text":"operation, or "},{"code":"nil","type":"codeVoice"},{"text":", if the file was not set, or the peripheral instance","type":"text"},{"text":" ","type":"text"},{"text":"could not be retrieved.","type":"text"}]}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When started, the service will automatically connect to the target, switch to"},{"text":" ","type":"text"},{"type":"text","text":"DFU Bootloader mode (if necessary), and send all the content of the specified"},{"type":"text","text":" "},{"text":"firmware file in one or two connections. Two connections will be used if a ZIP","type":"text"},{"type":"text","text":" "},{"type":"text","text":"file contains a SoftDevice and\/or Bootloader and an Application. First, the"},{"text":" ","type":"text"},{"text":"SoftDevice and\/or Bootloader will be transferred, then the service will disconnect,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"reconnect to the (new) Bootloader again and send the Application (unless the"},{"text":" ","type":"text"},{"text":"target supports receiving all files in a single connection). The peripheral","type":"text"},{"type":"text","text":" "},{"text":"will NOT be reconnected after the DFU is completed, aborted or has failed.","type":"text"}]},{"inlineContent":[{"text":"This method does not take control over the peripheral.","type":"text"},{"type":"text","text":" "},{"text":"A new central manager is used, from which a copy of the peripheral is retrieved.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Be warned, that the original peripheral delegate may receive a lot of calls, and"},{"type":"text","text":" "},{"text":"it will restart during the process. The app should not send any data to DFU","type":"text"},{"text":" ","type":"text"},{"text":"characteristics when DFU is in progress.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/start(target:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(im)startWithTarget:","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"text":"(","kind":"text"},{"text":"target","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)CBPeripheral","kind":"typeIdentifier","text":"CBPeripheral"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController"},{"text":"?","kind":"text"}],"role":"symbol","symbolKind":"method","title":"start(target:)","modules":[{"name":"NordicDFU"}]},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Starts sending the specified firmware to the given DFU target."}],"references":{"doc://NordicDFU/documentation/NordicDFU/DFUServiceController":{"navigatorTitle":[{"text":"DFUServiceController","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceController"}],"url":"\/documentation\/nordicdfu\/dfuservicecontroller","title":"DFUServiceController","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","abstract":[{"text":"The controller allows pausing, resuming or aborting the ongoing DFU operation.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU":{"url":"\/documentation\/nordicdfu","title":"NordicDFU","role":"collection","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"title":"DFUServiceInitiator","type":"topic","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","abstract":[{"text":"The initiator object should be used to initiate updating firmware","type":"text"},{"text":" ","type":"text"},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"DFUServiceInitiator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DFUServiceInitiator"}],"url":"\/documentation\/nordicdfu\/dfuserviceinitiator"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start(target:)":{"title":"start(target:)","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start(target:)","abstract":[{"type":"text","text":"Starts sending the specified firmware to the given DFU target."}],"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(target:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"text":"(","kind":"text"},{"text":"target","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBPeripheral","preciseIdentifier":"c:objc(cs)CBPeripheral","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","kind":"typeIdentifier","text":"DFUServiceController"},{"kind":"text","text":"?"}]}}}