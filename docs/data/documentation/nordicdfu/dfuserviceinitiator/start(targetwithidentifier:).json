{"sections":[],"metadata":{"symbolKind":"method","title":"start(targetWithIdentifier:)","roleHeading":"Instance Method","modules":[{"name":"NordicDFU"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"text":"(","kind":"text"},{"text":"targetWithIdentifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UUID","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4UUIDV"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController"},{"text":"?","kind":"text"}],"externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(im)startWithTargetWithIdentifier:","role":"symbol"},"variants":[{"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/start(targetwithidentifier:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(targetWithIdentifier:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Starts sending the specified firmware to the DFU target with given identifier."}],"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@objc","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"start"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"targetWithIdentifier"},{"text":" ","kind":"text"},{"text":"uuid","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController","kind":"typeIdentifier","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController"},{"kind":"text","text":"?"}],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The UUID associated with the peer.","type":"text"}],"type":"paragraph"}],"name":"uuid"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController"},{"type":"text","text":" object that can be used to control the DFU"},{"type":"text","text":" "},{"text":"operation, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", if the file was not set, or the peripheral instance","type":"text"},{"type":"text","text":" "},{"text":"could not be retrieved.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"When started, the service will automatically connect to the target, switch to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"DFU Bootloader mode (if necessary), and send all the content of the specified"},{"text":" ","type":"text"},{"text":"firmware file in one or two connections. Two connections will be used if a ZIP","type":"text"},{"type":"text","text":" "},{"type":"text","text":"file contains a SoftDevice and\/or Bootloader and an Application. First, the"},{"text":" ","type":"text"},{"text":"SoftDevice and\/or Bootloader will be transferred, then the service will disconnect,","type":"text"},{"type":"text","text":" "},{"text":"reconnect to the (new) Bootloader again and send the Application (unless the","type":"text"},{"type":"text","text":" "},{"text":"target supports receiving all files in a single connection). The peripheral","type":"text"},{"type":"text","text":" "},{"text":"will NOT be reconnected after the DFU is completed, aborted or has failed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This method does not take control over the peripheral."},{"type":"text","text":" "},{"type":"text","text":"A new central manager is used, from which a copy of the peripheral is retrieved."},{"type":"text","text":" "},{"type":"text","text":"Be warned, that the original peripheral delegate may receive a lot of calls, and"},{"text":" ","type":"text"},{"type":"text","text":"it will restart during the process. The app should not send any data to DFU"},{"type":"text","text":" "},{"text":"characteristics when DFU is in progress.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","title":"NordicDFU","role":"collection","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}],"type":"topic"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceController":{"navigatorTitle":[{"kind":"identifier","text":"DFUServiceController"}],"title":"DFUServiceController","url":"\/documentation\/nordicdfu\/dfuservicecontroller","type":"topic","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DFUServiceController","kind":"identifier"}],"abstract":[{"type":"text","text":"The controller allows pausing, resuming or aborting the ongoing DFU operation."}],"role":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start(targetWithIdentifier:)":{"title":"start(targetWithIdentifier:)","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start(targetwithidentifier:)","type":"topic","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(targetWithIdentifier:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"kind":"text","text":"("},{"text":"targetWithIdentifier","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4UUIDV","text":"UUID"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Starts sending the specified firmware to the DFU target with given identifier."}],"role":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"abstract":[{"text":"The initiator object should be used to initiate updating firmware","type":"text"},{"text":" ","type":"text"},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"text":" ","type":"text"},{"text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK.","type":"text"}],"type":"topic","url":"\/documentation\/nordicdfu\/dfuserviceinitiator","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceInitiator"}],"title":"DFUServiceInitiator","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","navigatorTitle":[{"text":"DFUServiceInitiator","kind":"identifier"}]}}}