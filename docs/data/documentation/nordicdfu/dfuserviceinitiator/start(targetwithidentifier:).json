{"abstract":[{"type":"text","text":"Starts sending the specified firmware to the DFU target with given identifier."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nordicdfu\/dfuserviceinitiator\/start(targetwithidentifier:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator"]]},"identifier":{"url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(targetWithIdentifier:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","modules":[{"name":"NordicDFU"}],"roleHeading":"Instance Method","symbolKind":"method","externalID":"c:@M@NordicDFU@objc(cs)DFUServiceInitiator(im)startWithTargetWithIdentifier:","title":"start(targetWithIdentifier:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"targetWithIdentifier","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UUID","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4UUIDV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController","text":"DFUServiceController","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@objc"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"text":"targetWithIdentifier","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"uuid"},{"text":": ","kind":"text"},{"text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"DFUServiceController","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The UUID associated with the peer."}]}],"name":"uuid"}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"inlineContent":[{"text":"A ","type":"text"},{"type":"reference","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","isActive":true},{"text":" object that can be used to control the DFU","type":"text"},{"text":" ","type":"text"},{"text":"operation, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":", if the file was not set, or the peripheral instance"},{"type":"text","text":" "},{"type":"text","text":"could not be retrieved."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"When started, the service will automatically connect to the target, switch to"},{"text":" ","type":"text"},{"text":"DFU Bootloader mode (if necessary), and send all the content of the specified","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"firmware file in one or two connections. Two connections will be used if a ZIP"},{"text":" ","type":"text"},{"text":"file contains a SoftDevice and\/or Bootloader and an Application. First, the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SoftDevice and\/or Bootloader will be transferred, then the service will disconnect,"},{"type":"text","text":" "},{"type":"text","text":"reconnect to the (new) Bootloader again and send the Application (unless the"},{"type":"text","text":" "},{"text":"target supports receiving all files in a single connection). The peripheral","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"will NOT be reconnected after the DFU is completed, aborted or has failed."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This method does not take control over the peripheral."},{"text":" ","type":"text"},{"type":"text","text":"A new central manager is used, from which a copy of the peripheral is retrieved."},{"text":" ","type":"text"},{"type":"text","text":"Be warned, that the original peripheral delegate may receive a lot of calls, and"},{"text":" ","type":"text"},{"type":"text","text":"it will restart during the process. The app should not send any data to DFU"},{"type":"text","text":" "},{"text":"characteristics when DFU is in progress.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://NordicDFU/documentation/NordicDFU/DFUServiceController":{"navigatorTitle":[{"text":"DFUServiceController","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DFUServiceController"}],"url":"\/documentation\/nordicdfu\/dfuservicecontroller","title":"DFUServiceController","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceController","abstract":[{"text":"The controller allows pausing, resuming or aborting the ongoing DFU operation.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator/start(targetWithIdentifier:)":{"title":"start(targetWithIdentifier:)","url":"\/documentation\/nordicdfu\/dfuserviceinitiator\/start(targetwithidentifier:)","abstract":[{"type":"text","text":"Starts sending the specified firmware to the DFU target with given identifier."}],"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator\/start(targetWithIdentifier:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"targetWithIdentifier","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4UUIDV","text":"UUID"},{"kind":"text","text":") -> "},{"text":"DFUServiceController","kind":"typeIdentifier","preciseIdentifier":"c:@M@NordicDFU@objc(cs)DFUServiceController"},{"kind":"text","text":"?"}]},"doc://NordicDFU/documentation/NordicDFU":{"url":"\/documentation\/nordicdfu","title":"NordicDFU","role":"collection","kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU"},"doc://NordicDFU/documentation/NordicDFU/DFUServiceInitiator":{"title":"DFUServiceInitiator","type":"topic","kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/DFUServiceInitiator","abstract":[{"text":"The initiator object should be used to initiate updating firmware","type":"text"},{"text":" ","type":"text"},{"text":"on a remote Bluetooth LE target compatible with the Nordic Semiconductorâ€™s Legacy or","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Secure DFU (Device Firmware Update) protocol from nRF5 SDK."}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"DFUServiceInitiator","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DFUServiceInitiator"}],"url":"\/documentation\/nordicdfu\/dfuserviceinitiator"}}}