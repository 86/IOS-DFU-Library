{"abstract":[{"type":"text","text":"Converts the Intel HEX data to a bin format by subtracting"},{"text":" ","type":"text"},{"type":"text","text":"only the data part from it."}],"sections":[],"metadata":{"symbolKind":"method","externalID":"s:9NordicDFU21IntelHex2BinConverterC7convert_7mbrSize10Foundation4DataVSgAH_s6UInt32VtFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"convert"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"mbrSize","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V","text":"UInt32"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"text":"?","kind":"text"}],"roleHeading":"Type Method","title":"convert(_:mbrSize:)","role":"symbol","modules":[{"name":"NordicDFU"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"hex","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mbrSize"},{"kind":"text","text":": "},{"text":"UInt32","kind":"typeIdentifier","preciseIdentifier":"s:s6UInt32V"},{"kind":"text","text":" = 0) -> "},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"hex","content":[{"type":"paragraph","inlineContent":[{"text":"Intel HEX fine as ","type":"text"},{"code":"Data","type":"codeVoice"},{"text":".","type":"text"}]}]},{"name":"mbrSize","content":[{"inlineContent":[{"type":"text","text":"The MBR size. MBR starts at address 0."},{"type":"text","text":" "},{"text":"MBR is ignored during conversion.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The binary part cut from the given file."}]}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Gaps in the addresses are not supported.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The returned data contains binary content until the first gap"},{"text":" ","type":"text"},{"text":"or end of the file.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/nordicdfu\/intelhex2binconverter\/convert(_:mbrsize:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/NordicDFU\/documentation\/NordicDFU","doc:\/\/NordicDFU\/documentation\/NordicDFU\/IntelHex2BinConverter"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/IntelHex2BinConverter\/convert(_:mbrSize:)","interfaceLanguage":"swift"},"references":{"doc://NordicDFU/documentation/NordicDFU/IntelHex2BinConverter":{"abstract":[{"type":"text","text":"This converter converts Intel HEX file to BIN."}],"type":"topic","url":"\/documentation\/nordicdfu\/intelhex2binconverter","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IntelHex2BinConverter"}],"title":"IntelHex2BinConverter","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/IntelHex2BinConverter","navigatorTitle":[{"text":"IntelHex2BinConverter","kind":"identifier"}]},"doc://NordicDFU/documentation/NordicDFU":{"kind":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU","title":"NordicDFU","role":"collection","url":"\/documentation\/nordicdfu","abstract":[{"text":"A Swift library for updating firmware of nRF51 and nRF52 devices over Bluetooth LE.","type":"text"}],"type":"topic"},"doc://NordicDFU/documentation/NordicDFU/IntelHex2BinConverter/convert(_:mbrSize:)":{"type":"topic","abstract":[{"type":"text","text":"Converts the Intel HEX data to a bin format by subtracting"},{"text":" ","type":"text"},{"type":"text","text":"only the data part from it."}],"url":"\/documentation\/nordicdfu\/intelhex2binconverter\/convert(_:mbrsize:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":", "},{"text":"mbrSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt32","preciseIdentifier":"s:s6UInt32V","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"text":"?","kind":"text"}],"title":"convert(_:mbrSize:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/NordicDFU\/documentation\/NordicDFU\/IntelHex2BinConverter\/convert(_:mbrSize:)"}}}